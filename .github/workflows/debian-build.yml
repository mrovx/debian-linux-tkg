name: Build Debian Kernel

on:
  workflow_dispatch:
    inputs:
      _cpusched:
        required: true
        type: string
        default: "bore"
      _processor_opt:
        required: true
        type: string
        default: "generic_v2"
      _compiler:
        required: true
        type: string
        default: "gcc"
      _upload_artifact:
        description: 'Upload tarball as GitHub artifact'
        required: true
        default: 'false'
        type: 'boolean'

env:
  _waydroid: "true"
  _processor_opt: "generic"
  _distro: "Debian"  
  _git_mirror: "github.com"
  _logging_use_script: "no"
  _install_after_building: "no"
  _debugdisable: "true"
  _noccache: "true"
  _STRIP: "true"
  _kernel_on_diet: "false"
  _kernel_work_folder: "/tmp"
  _kernel_source_folder: "/tmp"
  _modprobeddb: "true"
  _modprobeddb_db_path: "${{ github.workspace }}/modprobed.db"
  _tcp_cong_alg: "bbr"
  CFLAGS: "-g -O3 -feliminate-unused-debug-types -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -Wformat -Wformat-security -m64 -fasynchronous-unwind-tables -Wp,-D_REENTRANT -ftree-loop-distribute-patterns -Wl,-z,now -Wl,-z,relro -fno-semantic-interposition -ffat-lto-objects -fno-trapping-math -Wl,-sort-common -Wl,--enable-new-dtags"

jobs:
  build-kernel:
    env:
      _cpusched: ${{ inputs._cpusched }}
      _processor_opt: ${{ inputs._processor_opt }}
      _compiler: ${{ inputs._compiler }}

    runs-on: ubuntu-latest  # Consider using a Debian runner for better compatibility

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Checkout linux-tkg
        uses: actions/checkout@v4
        with:
          repository: Frogging-Family/linux-tkg
          ref: master
          path: tkg
        
      - name: Install deps and compile kernel
        working-directory: "tkg"
        run: yes '' | ./install.sh install

      - name: Cleanup useless DEB files
        working-directory: "tkg"
        run: rm -rf DEBS/*dbg*.deb DEBS/*libc-dev*.deb  # Clean up similar to Ubuntu

      - name: Rename kernel config
        working-directory: "tkg"
        run: mv kernelconfig.new kernelconfig.debian.${{ env._cpusched }}.txt
      - name: Create release name and release tag
        working-directory: "tkg"
        run: |
          release_tag=$(basename "$(ls DEBS/linux-image*.deb)" | awk -F'[_-]' '{print $3"-"$4"-"$5}')
          release_name=${release_tag//-/ }
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV
          echo "RELEASE_TAG=$release_tag" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        if: github.event_name == 'workflow_dispatch' && github.event.inputs._upload_artifact == 'true'      
        with:
          name: debian-kernel-packages-${{ env._cpusched }}
          path: |
            ${{ github.workspace }}/tkg/DEBS/*.deb
            ${{ github.workspace }}/tkg/kernelconfig*.txt
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.KERNEL_TAG}}
          files: |
            ${{ github.workspace }}/tkg/DEBS/*.deb
            ${{ github.workspace }}/tkg/kernelconfig*.txt
